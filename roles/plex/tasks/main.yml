---
- name: Ensure Media Datasets Exist
  when: inventory_hostname == groups['media'][0]
  community.general.zfs:
    name: "{{ item }}"
    state: present
  loop:
    - blacktalon/media/anime
    - blacktalon/media/audiobooks
    - blacktalon/media/kids
    - blacktalon/media/movies
    - blacktalon/media/music
    - blacktalon/media/tv
  tags:
    - plex
    - zfs

- name: Ensure Plex Dataset Exist
  when: inventory_hostname == groups['media'][0]
  community.general.zfs:
    name: blacktalon/apps/plex
    state: present
  tags:
    - plex
    - zfs

- name: Ensure Plex DNS Records Exist
  ansible.builtin.import_tasks: roles/traefik/tasks/dreamhost.yml
  when: inventory_hostname == groups['managers'][0]
  vars:
    domain_name: "{{ media_tld }}"
  tags:
   - plex
   - dns
  no_log: true

- name: Deploy Plex Service
  when: inventory_hostname == groups['managers'][0]
  community.docker.docker_swarm_service:
    name: plex
    hostname: "{{ plex_hostname }}"
    image: "{{ plex_docker_image }}:{{ plex_version }}"
    networks:
      - "{{ traefik_network }}"
    mode: replicated
    force_update: yes
    restart_config:
      condition: on-failure
    env:
      PUID: "{{ media_user }}"
      PGID: "{{ media_group }}"
      VERSION: "docker"
      PLEX_CLAIM: "{{ plex_claim_token }}"
    placement:
      constraints:
        - node.id == {{ blacktalon_node_id }}
    replicas: 1
    mounts:
      - source: "/blacktalon/apps/plex/"
        target: /config/
        type: bind
      - source: "{{ project_media_directory }}/movies/"
        target: /movies/
        type: bind
      - source: "{{ project_media_directory }}/movies-uhd/"
        target: /movies-uhd/
        type: bind
      - source: "{{ project_media_directory }}/tv/"
        target: /tv/
        type: bind
      - source: "{{ project_media_directory }}/tv-uhd/"
        target: /tv-uhd/
        type: bind
      - source: "{{ project_media_directory }}/kids/"
        target: /kids/
        type: bind
      - source: "{{ project_media_directory }}/anime/"
        target: /anime/
        type: bind
      - source: "{{ project_media_directory }}/music/"
        target: /music/
        type: bind
      - source: "{{ project_media_directory }}/audiobooks/"
        target: /audiobooks/
        type: bind
      - source: "{{ project_media_directory }}/preroll/"
        target: /pre-roll/
        type: bind
    labels:
      traefik.http.routers.plex.entrypoints: "websecure"
      traefik.http.routers.plex.rule: "Host(`{{ media_tld }}`)"
      traefik.http.routers.plex.middlewares: "default-headers@file"
      traefik.http.routers.plex.tls: "true"
      traefik.http.routers.plex.service: "plex"
      traefik.http.routers.plex.tls.certresolver: "{{ default_certificate_resolver }}"
      traefik.http.services.plex.loadbalancer.server.port: "{{ plex_port }}"
      traefik.enable: "true"
    state: present
  tags: plex