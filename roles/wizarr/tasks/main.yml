---
- name: Ensure Wizarr Dataset Exist
  when: inventory_hostname == groups['media'][0]
  community.general.zfs:
    name: blacktalon/apps/wizarr
    state: present
  tags: 
    - wizarr
    - zfs

- name: Ensure Wizarr DNS Records Exist
  ansible.builtin.import_tasks: roles/traefik/tasks/dns.yml
  when: inventory_hostname == groups['managers'][0]
  vars:
    domain_name: "{{ wizarr_domain }}"
  tags: 
    - wizarr
    - dns
  no_log: true

- name: Deploy Wizarr Service
  when: inventory_hostname == groups['managers'][0]
  community.docker.docker_swarm_service:
    name: wizarr
    hostname: "{{ wizarr_hostname }}"
    image: "{{ wizarr_docker_image }}:{{ wizarr_version }}"
    networks:
      - "{{ traefik_network }}"
    mode: replicated
    force_update: yes
    restart_config:
      condition: on-failure
    env:
      APP_URL: "https://{{ wizarr_domain }}"
      DISABLE_BUILTIN_AUTH: "false"
    placement:
      constraints:
        - node.id == {{ blacktalon_node_id }}
    replicas: 1
    mounts:
      - source: /blacktalon/apps/wizarr/
        target: /data/database/
        type: bind
    labels:
      traefik.http.routers.wizarr.entrypoints: "websecure"
      traefik.http.routers.wizarr.rule: "Host(`{{ wizarr_domain }}`)"
      traefik.http.routers.wizarr.middlewares: "default-headers@file"
      traefik.http.routers.wizarr.tls: "true"
      traefik.http.routers.wizarr.service: "wizarr"
      traefik.http.routers.wizarr.tls.certresolver: "{{ default_certificate_resolver }}"
      traefik.http.services.wizarr.loadbalancer.server.port: "{{ wizarr_port }}"
      traefik.enable: "true"
    state: present
  tags: wizarr