---
- name: Ensure Traefik Directories Exist
  when: inventory_hostname == groups['managers'][0]
  ansible.builtin.file:
    path: "{{ item.path }}"
    mode: "{{ item.mode }}"
    state: directory
  loop:
    - {path: '/yellowtalon/apps/traefik', mode: '0755'}
    - {path: '/yellowtalon/apps/traefik/letsencrypt', mode: '0755'}
  tags: traefik

- name: Ensure Acme File Exists
  when: inventory_hostname == groups['managers'][0]
  ansible.builtin.copy:
    content: ""
    dest: /yellowtalon/apps/traefik/letsencrypt/acme.json
    force: no
    owner: root
    mode: 0600
  no_log: true
  tags: traefik

- name: Ensure All Root DNS Records Exist
  when: inventory_hostname == groups['managers'][0]
  dreamhost_dns:
      name: "{{ item }}"
      type: A
      value: "{{ external_ipv4_address }}"
      api_key: "{{ dreamhost_token }}"
      state: present
  with_items:
    - "{{ project_tld }}"
    - "{{ git_tld }}"
    - "{{ media_tld }}"
    - "{{ link_tld }}"
    - "{{ peertube_tld }}"
    - "{{ photo_tld }}"
    - "{{ cloud_tld }}"
    - "{{ social_tld }}"
    - "{{ wiki_tld }}"
    - "{{ dev_tld }}"
    - "{{ realestate_tld }}"
  tags: traefik
  no_log: true

- name: Ensure Teaefik Configuration Files Exist
  when: inventory_hostname == groups['managers'][0]
  ansible.builtin.template:
    src: "{{ item.src }}"
    mode: "{{ item.mode }}"
    dest: "{{ item.dest }}"
  with_items:
    - {src: 'config.yml.j2', dest: '/yellowtalon/apps/traefik/config.yml', mode: '0644'}
    - {src: 'traefik-conf.yml.j2', dest: '/yellowtalon/apps/traefik/traefik-conf.yml', mode: '0644'}
  tags: traefik
  no_log: true

- name: Deploy Traefik Service
  when: inventory_hostname == groups['managers'][0]
  community.docker.docker_swarm_service:
    name: traefik
    hostname: "{{ traefik_hostname }}"
    image: "{{ traefik_docker_image }}:{{ traefik_version }}"
    networks:
      - "{{ traefik_network }}"
    env:
      DREAMHOST_API_KEY: "{{ dreamhost_token }}"
    publish:
      - published_port: "{{ traefik_http_port }}"
        target_port: "{{ traefik_http_port }}"
      - published_port: "{{ traefik_https_port }}"
        target_port: "{{ traefik_https_port }}"
      - published_port: "1935"
        target_port: "1935"
      - published_port: "8082"
        target_port: "8082"
    mode: global
    force_update: yes
    restart_config:
      condition: on-failure
    placement:
      constraints:
        - node.id == {{ yellowtalon_node_id }}
    mounts:
      - source: /yellowtalon/apps/traefik/traefik-conf.yml
        target: /traefik.yml
        type: bind
      - source: /yellowtalon/apps/traefik/letsencrypt/acme.json
        target: /acme.json
        type: bind
      - source: /yellowtalon/apps/traefik/config.yml
        target: /config.yml
        type: bind
    labels:
      traefik.http.routers.traefiksecure.entrypoints: "websecure"
      traefik.http.routers.traefiksecure.rule: "Host(`api.{{ project_tld }}`)"
      traefik.http.routers.traefiksecure.tls: "true"
      traefik.http.routers.traefiksecure.middlewares: "authelia@file"
      traefik.http.routers.traefiksecure.service: "api@internal"
      traefik.http.routers.wildcard.tls.certresolver: "{{ default_certificate_resolver }}"
      traefik.http.routers.wildcard.tls.domains[0].main: "{{ project_tld }}"
      traefik.http.routers.wildcard.tls.domains[0].sans: "*.{{ project_tld }}"
      traefik.http.routers.wildcard.tls.domains[1].main: "{{ git_tld }}"
      traefik.http.routers.wildcard.tls.domains[1].sans: "*.{{ git_tld }}"
      traefik.http.routers.wildcard.tls.domains[2].main: "{{ media_tld }}"
      traefik.http.routers.wildcard.tls.domains[2].sans: "*.{{ media_tld }}"
      traefik.http.routers.wildcard.tls.domains[3].main: "{{ link_tld }}"
      traefik.http.routers.wildcard.tls.domains[3].sans: "*.{{ link_tld }}"
      traefik.http.routers.wildcard.tls.domains[4].main: "{{ peertube_tld }}"
      traefik.http.routers.wildcard.tls.domains[4].sans: "*.{{ peertube_tld }}"
      traefik.http.routers.wildcard.tls.domains[5].main: "{{ photo_tld }}"
      traefik.http.routers.wildcard.tls.domains[5].sans: "*.{{ photo_tld }}"
      traefik.http.routers.wildcard.tls.domains[6].main: "{{ cloud_tld }}"
      traefik.http.routers.wildcard.tls.domains[6].sans: "*.{{ cloud_tld }}"
      traefik.http.routers.wildcard.tls.domains[7].main: "{{ social_tld }}"
      traefik.http.routers.wildcard.tls.domains[7].sans: "*.{{ social_tld }}"
      traefik.http.routers.wildcard.tls.domains[8].main: "{{ wiki_tld }}"
      traefik.http.routers.wildcard.tls.domains[8].sans: "*.{{ wiki_tld }}"
      traefik.http.routers.wildcard.tls.domains[9].main: "{{ dev_tld }}"
      traefik.http.routers.wildcard.tls.domains[9].sans: "*.{{ dev_tld }}"
      traefik.http.routers.wildcard.tls.domains[10].main: "{{ realestate_tld }}"
      traefik.http.routers.wildcard.tls.domains[10].sans: "*.{{ realestate_tld }}"
      traefik.http.services.dummy-svc.loadbalancer.server.port: "9999"
      traefik.enable: "true"
    state: present
  tags: traefik

- name: Import Traefik Development Role
  ansible.builtin.import_tasks: "{{ role_path }}/tasks/development.yml"
  tags: development