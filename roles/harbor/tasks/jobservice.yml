---
- name: Ensure Harbor Job Service Directories Exist
  when: inventory_hostname == groups['workers'][0]
  file:
    path: "{{item}}"
    state: directory
  loop:
    - "{{project_root_directory}}/harbor/jobservice"
    - "{{project_root_directory}}/harbor/jobservice/job_logs"
  tags: harbor

- name: Ensure Harbor Job Service Configuration Files Exist
  when: inventory_hostname == groups['workers'][0]
  template:
    src: jobservice-config.yml.j2
    dest: "{{project_root_directory}}/harbor/jobservice/config.yml"
  tags: harbor
  no_log: true

- name: Deploy Harbor Job Service Service
  when: inventory_hostname == groups['managers'][0]
  community.docker.docker_swarm_service:
    name: jobservice
    hostname: "{{jobservice_hostname}}"
    image: "{{jobservice_docker_image}}:{{harbor_version}}"
    networks:
      - "{{traefik_network}}"
    env:
      CORE_SECRET: ""
      REGISTRY_URL: ""
      JOBSERVICE_SECRET: ""
      CORE_URL: ""
      REGISTRY_CONTROLLER_URL: ""
      JOBSERVICE_WEBHOOK_JOB_MAX_RETRY: ""
      HTTP_PROXY: ""
      HTTPS_PROXY: ""
      NO_PROXY: ""
      REGISTRY_CREDENTIAL_USERNAME: ""
      REGISTRY_CREDENTIAL_PASSWORD: ""
      _REDIS_URL_CORE: ""
      CACHE_ENABLED: "true"
      CACHE_EXPIRE_HOURS: ""
    mounts:
      - source: /greytalon/apps/harbor/jobservice/job_logs/
        target: /var/log/jobs/
        type: bind
      - source: /greytalon/apps/harbor/jobservice/config.yml
        target: /etc/jobservice/config.yml
        type: bind
    mode: replicated
    force_update: yes
    restart_config:
      condition: on-failure
    placement:
      constraints:
        - node.id == {{greytalon_node_id}}
    replicas: 1
    state: present
  tags: harbor