---
- name: Ensure Harbor Directories Exist
  when: inventory_hostname == groups['workers'][0]
  file:
    path: "{{item}}"
    state: directory
  loop:
    - "{{project_root_directory}}/harbor"
    - "{{project_root_directory}}/harbor/core"
  tags: harbor

- import_tasks: "{{role_path}}/tasks/logging.yml"
  tags:
    - harbor

- import_tasks: "{{role_path}}/tasks/database.yml"
  tags:
    - harbor

- import_tasks: "{{role_path}}/tasks/registry.yml"
  tags:
    - harbor

- name: Ensure Harbor Configuration Files Exist
  when: inventory_hostname == groups['workers'][0]
  template:
    src: app.conf.j2
    dest: "{{project_root_directory}}/harbor/core/app.conf"
  tags: harbor
  no_log: true

- name: Deploy Harbor Service
  when: inventory_hostname == groups['managers'][0]
  community.docker.docker_swarm_service:
    name: harbor
    hostname: "{{harbor_hostname}}"
    image: "{{harbor_docker_image}}:{{harbor_version}}"
    networks:
      - "{{traefik_network}}"
    mode: replicated
    force_update: yes
    mounts:
      - source: /greytalon/apps/harbor/core/app.conf
        target: /etc/core/app.conf
        type: bind
    env:
      CONFIG_PATH: "/etc/core/app.conf"
      UAA_CA_ROOT: "/etc/core/certificates/uaa_ca.pem"
      _REDIS_URL_CORE: ""
      SYNC_QUOTA: "true"
      CHART_CACHE_DRIVER: ""
      _REDIS_URL_REG: ""
      LOG_LEVEL: ""
      EXT_ENDPOINT: "{{public_url}}"
      DATABASE_TYPE: "postgresql"
      POSTGRESQL_HOST: ""
      POSTGRESQL_PORT: ""
      POSTGRESQL_USERNAME: ""
      POSTGRESQL_PASSWORD: ""
      POSTGRESQL_DATABASE: ""
      POSTGRESQL_SSLMODE: ""
      POSTGRESQL_MAX_IDLE_CONNS: ""
      POSTGRESQL_MAX_OPEN_CONNS: ""
      REGISTRY_URL: "{{registry_url}}"
      PORTAL_URL: "{{portal_url}}"
      TOKEN_SERVICE_URL: ""
      HARBOR_ADMIN_PASSWORD: ""
      MAX_JOB_WORKERS: ""
      CORE_SECRET: ""
      JOBSERVICE_SECRET: ""
      WITH_NOTARY: ""
      WITH_TRIVY: ""
      CORE_URL: ""
      CORE_LOCAL_URL: ""
      JOBSERVICE_URL: ""
      TRIVY_ADAPTER_URL: ""
      NOTARY_URL: ""
      REGISTRY_STORAGE_PROVIDER_NAME: ""
      READ_ONLY: "false"
      RELOAD_KEY: ""
      CHART_REPOSITORY_URL: ""
      REGISTRY_CONTROLLER_URL: ""
      WITH_CHARTMUSEUM: ""
      REGISTRY_CREDENTIAL_USERNAME: ""
      REGISTRY_CREDENTIAL_PASSWORD: ""
      CSRF_KEY: ""
      PERMITTED_REGISTRY_TYPES_FOR_PROXY_CACHE: "docker-hub,harbor,azure-acr,aws-ecr,google-gcr,quay,docker-registry,github-ghcr"
      HTTP_PROXY: ""
      HTTPS_PROXY: ""
      NO_PROXY: ""
      PORT: "8080"
      CACHE_ENABLED: "true"
      CACHE_EXPIRE_HOURS: ""
    restart_config:
      condition: on-failure
    placement:
      constraints:
        - node.id == {{greytalon_node_id}}
    replicas: 1
    state: present
  tags: harbor

- import_tasks: "{{role_path}}/tasks/jobservice.yml"
  tags:
    - harbor

- import_tasks: "{{role_path}}/tasks/portal.yml"
  tags:
    - harbor

- import_tasks: "{{role_path}}/tasks/proxy.yml"
  tags:
    - harbor