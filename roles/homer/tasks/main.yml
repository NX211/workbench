---
- name: Ensure Homer Directories Exist
  when: inventory_hostname == groups['managers'][0]
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  loop:
    - "{{ project_root_directory }}/homer"
    - "{{ project_root_directory }}/homer/icons"
  tags: homer

- name: Clone a Homer Icons Repository
  when: inventory_hostname == groups['managers'][0]
  ansible.builtin.git:
    repo: "{{ homer_git_repository_url }}"
    dest: "{{ project_root_directory }}/homer/tools"
    clone: yes
    update: yes
  tags: homer

- name: Ensure Homer Configuration Files Exist
  when: inventory_hostname == groups['managers'][0]
  ansible.builtin.template:
    src: config.yml.j2
    dest: "{{ project_root_directory }}/homer/config.yml"
    mode: 0755
  tags: homer
  no_log: true

- name: Ensure Homer Icons Files Exist
  when: inventory_hostname == groups['managers'][0]
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0755
  with_items:
    - { src: android-chrome-192x192.png, dest: "{{ project_root_directory }}/homer/icons/android-chrome-192x192.png" }
    - { src: android-chrome-512x512.png, dest: "{{ project_root_directory }}/homer/icons/android-chrome-512x512.png" }
    - { src: apple-touch-icon.png, dest: "{{ project_root_directory }}/homer/icons/apple-touch-icon.png" }
    - { src: favicon-16x16.png, dest: "{{ project_root_directory }}/homer/icons/favicon-16x16.png" }
    - { src: favicon-32x32.png, dest: "{{ project_root_directory }}/homer/icons/favicon-32x32.png" }
    - { src: favicon.ico, dest: "{{ project_root_directory }}/homer/icons/favicon.ico" }
  tags: homer
  no_log: true

- name: Deploy Homer Service
  when: inventory_hostname == groups['managers'][0]
  community.docker.docker_swarm_service:
    name: homer
    hostname: "{{ homer_hostname }}"
    image: "{{ homer_docker_image }}:{{ homer_version }}"
    networks:
      - "{{ traefik_network }}"
    mode: global
    env:
      UID: "{{ homer_uid }}"
      GID: "{{ homer_gid }}"
      PORT: "{{ homer_port }}"
      INIT_ASSETS: "0"
    restart_config:
      condition: on-failure
    placement:
      constraints:
        - node.id == {{ yellowtalon_node_id }}
    mounts:
      - source: "{{ project_root_directory }}/homer/"
        target: /www/assets/
        type: bind
    labels:
      traefik.http.routers.homer.entrypoints: "websecure"
      traefik.http.routers.homer.rule: "Host(`{{ project_tld }}`,`www.{{ project_tld }}`)"
      traefik.http.routers.homer.middlewares: "default-headers@file"
      traefik.http.routers.homer.tls: "true"
      traefik.http.routers.homer.service: "homer"
      traefik.http.routers.homer.tls.certresolver: "{{ default_certificate_resolver }}"
      traefik.http.services.homer.loadbalancer.server.port: "{{ homer_port }}"
      traefik.enable: "true"
    state: present
  tags: homer