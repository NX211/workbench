---
- name: Ensure Tautulli Directory Exist
  when: inventory_hostname == groups['workers'][0]
  ansible.builtin.file:
    path: "{{ project_root_directory }}/tautulli"
    mode: 0755
    state: directory
  tags: tautulli

- name: Ensure Tautulli DNS Records Exist
  ansible.builtin.import_tasks: roles/traefik/tasks/dreamhost.yml
  when: inventory_hostname == groups['managers'][0]
  vars:
    domain_name: "{{ tautulli_domain }}"
  tags:
    - tautulli
    - dns
  no_log: true

- name: Deploy Tautulli Service
  when: inventory_hostname == groups['managers'][0]
  community.docker.docker_swarm_service:
    name: tautulli
    hostname: "{{ tautulli_hostname }}"
    image: "{{ tautulli_docker_image }}:{{ tautulli_version }}"
    networks:
      - "{{ traefik_network }}"
    mode: replicated
    force_update: yes
    env:
      PUID: "{{ tautulli_puid }}"
      PGID: "{{ tautulli_guid }}"
      TZ: "{{ default_timezone }}"
    restart_config:
      condition: on-failure
    placement:
      constraints:
        - node.id == {{ greytalon_node_id }}
    replicas: 1
    mounts:
      - source: /greytalon/apps/tautulli/
        target: /config/
        type: bind
    labels:
      traefik.http.routers.tautulli.entrypoints: "websecure"
      traefik.http.routers.tautulli.rule: "Host(`{{ tautulli_domain }}`)"
      traefik.http.routers.tautulli.middlewares: "default-headers@file"
      traefik.http.routers.tautulli.tls: "true"
      traefik.http.routers.tautulli.service: "tautulli"
      traefik.http.routers.tautulli.tls.certresolver: "{{ default_certificate_resolver }}"
      traefik.http.services.tautulli.loadbalancer.server.port: "{{ tautulli_port }}"
      traefik.enable: "true"
    state: present
  tags: tautulli