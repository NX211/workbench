---
- name: Ensure Ombi Dataset Exist
  when: inventory_hostname == groups['media'][0]
  community.general.zfs:
    name: blacktalon/apps/ombi
    state: present
  tags: 
    - ombi
    - zfs

- name: Ensure Ombi DNS Records Exist
  ansible.builtin.import_tasks: roles/traefik/tasks/dns.yml
  when: inventory_hostname == groups['managers'][0]
  vars:
    domain_name: "{{ ombi_domain }}"
  tags: 
    - ombi
    - dns
  no_log: true

- name: Deploy Ombi Service
  when: inventory_hostname == groups['managers'][0]
  community.docker.docker_swarm_service:
    name: ombi
    hostname: "{{ ombi_hostname }}"
    image: "{{ ombi_docker_image }}:{{ ombi_version }}"
    networks:
      - "{{ traefik_network }}"
    mode: replicated
    force_update: yes
    restart_config:
      condition: on-failure
    env:
      PUID: "{{ media_user }}"
      PGID: "{{ media_group }}"
      TZ: "{{ default_timezone }}"
    placement:
      constraints:
        - node.id == {{ blacktalon_node_id }}
    replicas: 1
    mounts:
      - source: "/blacktalon/apps/ombi/"
        target: /config/
        type: bind
    labels:
      traefik.http.routers.ombi.entrypoints: "websecure"
      traefik.http.routers.ombi.rule: "Host(`{{ ombi_domain }}`)"
      traefik.http.routers.ombi.middlewares: "default-headers@file"
      traefik.http.routers.ombi.tls: "true"
      traefik.http.routers.ombi.service: "ombi"
      traefik.http.routers.ombi.tls.certresolver: "{{ default_certificate_resolver }}"
      traefik.http.services.ombi.loadbalancer.server.port: "{{ ombi_port }}"
      traefik.enable: "true"
    state: present
  tags: ombi