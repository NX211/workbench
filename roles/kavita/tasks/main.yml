---
- name: Ensure Media Datasets Exist
  when: inventory_hostname == groups['media'][0]
  community.general.zfs:
    name: "{{ item }}"
    state: present
  loop:
    - blacktalon/media/manga
    - blacktalon/media/books
    - blacktalon/media/comics
  tags: 
    - kavita
    - zfs

- name: Ensure Kavita Dataset Exist
  when: inventory_hostname == groups['media'][0]
  community.general.zfs:
    name: blacktalon/apps/kavita
    state: present
  tags: 
    - kavita
    - zfs

- name: Ensure Kavita DNS Records Exist
  ansible.builtin.import_tasks: roles/traefik/tasks/dns.yml
  when: inventory_hostname == groups['managers'][0]
  vars:
    domain_name: "{{ kavita_domain }}"
  tags: 
    - kavita
    - dns
  no_log: true

- name: Ensure Kavita Configuration Files Exist
  when: inventory_hostname == groups['media'][0]
  ansible.builtin.template:
    src: appsettings.json.j2
    mode: 0644
    dest: "{{ project_root_directory }}/kavita/appsettings.json"
  tags: kavita
  no_log: true

- name: Deploy Kavita Service
  when: inventory_hostname == groups['managers'][0]
  community.docker.docker_swarm_service:
    name: kavita
    hostname: "{{ kavita_hostname }}"
    image: "{{ kavita_docker_image }}:{{ kavita_version }}"
    networks:
      - "{{ traefik_network }}"
    mode: replicated
    force_update: yes
    restart_config:
      condition: on-failure
    env:
      PUID: "{{ media_user }}"
      PGID: "{{ media_group }}"
      TZ: "{{ default_timezone }}"
    placement:
      constraints:
        - node.id == {{ blacktalon_node_id }}
    replicas: 1
    mounts:
      - source: "/blacktalon/apps/kavita/"
        target: /kavita/config/
        type: bind
      - source: "{{ project_media_directory }}/manga/"
        target: /media/manga/
        type: bind
      - source: "{{ project_media_directory }}/books/"
        target: /media/books/
        type: bind
      - source: "{{ project_media_directory }}/comics/"
        target: /media/comics/
        type: bind
    labels:
      traefik.http.routers.kavita.entrypoints: "websecure"
      traefik.http.routers.kavita.rule: "Host(`{{ kavita_domain }}`)"
      traefik.http.routers.kavita.middlewares: "default-headers@file"
      traefik.http.routers.kavita.tls: "true"
      traefik.http.routers.kavita.service: "kavita"
      traefik.http.routers.kavita.tls.certresolver: "{{ default_certificate_resolver }}"
      traefik.http.services.kavita.loadbalancer.server.port: "{{ kavita_port }}"
      traefik.enable: "true"
    state: present
  tags: kavita