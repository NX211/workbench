---
- name: Ensure RSS-Bridge DNS Records Exist
  ansible.builtin.import_tasks: roles/traefik/tasks/dns.yml
  when: inventory_hostname == groups['managers'][0]
  vars:
    domain_name: "{{ freshrss_bridge_domain }}"
  tags: 
    - rss-bridge
    - dns
  no_log: true

- name: Ensure RSS-Bridge Dataset Exist
  when: inventory_hostname == groups['workers'][0]
  community.general.zfs:
    name: greytalon/apps/rssbridge
    state: present
  tags: 
    - rss-bridge
    - zfs

- name: Ensure RSS-Bridge Configuration File Exist
  when: inventory_hostname == groups['workers'][0]
  ansible.builtin.template:
    src: whitelist.txt.j2
    dest: "{{ project_root_directory }}/rssbridge/whitelist.txt"
    mode: 0644
  tags: rss-bridge
  no_log: true

- name: Deploy RSS-Bridge Service
  when: inventory_hostname == groups['managers'][0]
  community.docker.docker_swarm_service:
    name: rssbridge
    hostname: "{{ freshrss_bridge_hostname }}"
    image: "{{ freshrss_bridge_docker_image }}:{{ freshrss_bridge_version }}"
    networks:
      - "{{ traefik_network }}"
    mode: replicated
    force_update: yes
    restart_config:
      condition: on-failure
    placement:
      constraints:
        - node.id == {{ greytalon_node_id }}
    replicas: 1
    mounts:
      - source: /greytalon/apps/rssbridge/
        target: /config/
        type: bind
    labels:
      traefik.http.routers.rssbridge.entrypoints: "websecure"
      traefik.http.routers.rssbridge.rule: "Host(`{{ freshrss_bridge_domain }}`)"
      traefik.http.routers.rssbridge.middlewares: "default-headers@file"
      traefik.http.routers.rssbridge.tls: "true"
      traefik.http.routers.rssbridge.service: "rssbridge"
      traefik.http.routers.rssbridge.tls.certresolver: "{{ default_certificate_resolver }}"
      traefik.http.services.rssbridge.loadbalancer.server.port: "{{ freshrss_bridge_port }}"
      traefik.enable: "true"
    state: present
  tags: rss-bridge