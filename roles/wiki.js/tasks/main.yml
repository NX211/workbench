---
- name: Ensure Wiki.js Directory Exist
  when: inventory_hostname == groups['workers'][0]
  file:
    path: "{{project_root_directory}}/wikijs"
    state: directory
  tags: wiki.js

- import_tasks: roles/postgres/tasks/database_manager.yml
  when: inventory_hostname == groups['managers'][0]
  vars:
    database_name: "{{wikijs_database}}"
    database_user: "{{wikijs_database_user}}"
    database_password: "{{wikijs_database_password}}"
  tags: wiki.js
  no_log: true

- name: Deploy Wiki.js Service
  when: inventory_hostname == groups['managers'][0]
  community.docker.docker_swarm_service:
    name: wikijs
    hostname: "{{wikijs_hostname}}"
    image: "{{wikijs_docker_image}}:{{wikijs_version}}"
    networks:
      - "{{traefik_network}}"
    env:
      DB_TYPE: "postgres"
      DB_HOST: "{{postgres_hostname}}"
      DB_PORT: "{{postgres_port}}"
      DB_USER: "{{wikijs_database_user}}"
      DB_PASS: "{{wikijs_database_password}}"
      DB_NAME: "{{wikijs_database}}"
    mode: replicated
    force_update: yes
    restart_config:
      condition: on-failure
    mounts:
      - source: "/greytalon/apps/wikijs/"
        target: /data/
        type: bind
    placement:
      constraints:
        - node.id == m1enhyjtwu2k7zvvjbgwv2e4s
    replicas: 1
    labels:
      traefik.http.routers.wikijs.entrypoints: "websecure"
      traefik.http.routers.wikijs.rule: "Host(`wiki.{{project_tld}}`)"
      traefik.http.routers.wikijs.middlewares: "default-headers@file"
      traefik.http.routers.wikijs.tls: "true"
      traefik.http.routers.wikijs.service: "wikijs"
      traefik.http.routers.wikijs.tls.certresolver: "{{default_certificate_resolver}}"
      traefik.http.services.wikijs.loadbalancer.server.port: "{{wikijs_port}}"
      traefik.enable: "true"
    state: present
  tags: wiki.js