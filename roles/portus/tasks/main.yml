---
- name: Import Clair Database Role
  ansible.builtin.import_tasks: "{{ role_path }}/tasks/clair.yml"
  tags:
    - portus

- name: Ensure Portus Directory Exist
  when: inventory_hostname == groups['workers'][0]
  ansible.builtin.file:
    path: "{{ project_root_directory }}/portus"
    mode: 0755
    state: directory
  tags: portus

- name: Ensure Portus Configuration Files Exist
  when: inventory_hostname == groups['workers'][0]
  ansible.builtin.template:
    src: clair-config.yml.j2
    mode: 0644
    dest: "{{ project_root_directory }}/portus/clair/clair-config.yml"
  tags: portus
  no_log: true

- name: Deploy Portus Service
  when: inventory_hostname == groups['managers'][0]
  community.docker.docker_swarm_service:
    name: portus
    hostname: "{{ portus_hostname }}"
    image: "{{ portus_docker_image }}:{{ portus_version }}"
    networks:
      - "{{ traefik_network }}"
    mode: replicated
    force_update: yes
    mounts:
      - source: "/greytalon/apps/portus/data/"
        target: /data/
        type: bind
    env:
      PORTUS_MACHINE_FQDN_VALUE: "hub.{{ git_tld }}"
      CCONFIG_PREFIX: "PORTUS"
      PORTUS_KEY_PATH: "config/secrets.yml"
      PORTUS_CHECK_SSL_USAGE_ENABLED: "false"
      RAILS_SERVE_STATIC_FILES: "true"
      PORTUS_PASSWORD: "{{ portus_user_password }}"
      PORTUS_SECRET_KEY_BASE: "{{ portus_secret_key_base }}"
      PORTUS_DB_ADAPTER: "postgresql"
      PORTUS_DB_HOST: "{{ postgres_hostname }}"
      PORTUS_DB_USERNAME: "{{ portus_database_user }}"
      PORTUS_DB_PASSWORD: "{{ portus_database_password }}"
      PORTUS_DB_DATABASE: "{{ portus_database }}"
      PORTUS_DB_PORT: "{{ postgres_port }}"
      PORTUS_EMAIL_FROM: "{{ email_user }}"
      PORTUS_EMAIL_REPLY_TO: "support@{{ project_tld }}"
      PORTUS_EMAIL_NAME: "Portus"
      PORTUS_EMAIL_SMTP_ENABLED: 'true'
      PORTUS_EMAIL_SMTP_ADDRESS: "{{ email_user }}"
      PORTUS_EMAIL_SMTP_PORT: "{{ email_port }}"
      PORTUS_EMAIL_SMTP_SSL_TLS: "true"
      PORTUS_EMAIL_SMTP_ENABLE_STARTTLS_AUTO: "true"
      PORTUS_EMAIL_SMTP_USER_NAME: "{{ email_user }}"
      PORTUS_EMAIL_SMTP_PASSWORD: "{{ email_password }}"
      PORTUS_EMAIL_SMTP_AUTHENTICATION: "plain"
      PORTUS_SECURITY_CLAIR_SERVER: "http://clair:6060"
      PORTUS_DELETE_ENABLED: "true"
      PORTUS_DELETE_GARBAGE_COLLECTOR_ENABLED: "true"
      PORTUS_DELETE_GARBAGE_COLLECTOR_OLDER_THAN: "60"
      PORTUS_GRAVATAR_ENABLED: "false"
      PORTUS_SIGNUP_ENABLED: "false"
      PORTUS_ANONYMOUS_BROWSING_ENABLED: "false"
      PORTUS_BACKGROUD_REGISTRY_ENABLED: "true"
      PORTUS_BACKGROUD_SYNC_ENABLED: "true"
      PORTUS_BACKGROUD_SYNC_STRATEGY: "update-delete"
    restart_config:
      condition: on-failure
    placement:
      constraints:
        - node.id == {{ greytalon_node_id }}
    replicas: 1
    labels:
      traefik.http.routers.portus.entrypoints: "websecure"
      traefik.http.routers.portus.rule: "Host(`hub.{{ git_tld }}`)"
      traefik.http.routers.portus.tls: "true"
      traefik.http.routers.portus.service: "portus"
      traefik.http.routers.portus.tls.certresolver: "{{ default_certificate_resolver }}"
      traefik.http.services.portus.loadbalancer.server.port: "{{ portus_port }}"
      traefik.enable: "true"
    state: present
  tags: portus

- name: Import Docker Registry Role
  ansible.builtin.import_tasks: "{{ role_path }}/tasks/registry.yml"
  tags:
    - portus

- name: Import Portus Backgroud Service Role
  ansible.builtin.import_tasks: "{{ role_path }}/tasks/background.yml"
  tags:
    - portus