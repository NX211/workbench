---
- name: Deploy Unpackerr Service
  when: inventory_hostname == groups['managers'][0]
  community.docker.docker_swarm_service:
    name: unpackerr
    hostname: "{{ unpackerr_hostname }}"
    image: "{{ unpackerr_docker_image }}:{{ unpackerr_version }}"
    networks:
      - "{{ traefik_network }}"
    mode: replicated
    env:
      TZ: "{{ default_timezone }}"
      UN_DEBUG: "false"
      UN_LOG_FILE: ""
      UN_LOG_FILES: "10"
      UN_LOG_FILE_MB: "10"
      UN_INTERVAL: "2m"
      UN_START_DELAY: "1m"
      UN_RETRY_DELAY: "5m"
      UN_MAX_RETRIES: "3"
      UN_PARALLEL: "1"
      UN_FILE_MODE: "0644"
      UN_DIR_MODE: "0755"
      UN_SONARR_0_URL: "http://sonarr:8989"
      UN_SONARR_0_API_KEY: "{{ sonarr_api_key }}"
      UN_SONARR_0_PATHS_0: "/media/downloads/tv"
      UN_SONARR_0_PROTOCOLS: "torrent"
      UN_SONARR_0_TIMEOUT: "10s"
      UN_SONARR_0_DELETE_ORIG: "false"
      UN_SONARR_0_DELETE_DELAY: "5m"
      UN_RADARR_0_URL: "http://radarr:7878"
      UN_RADARR_0_API_KEY: "{{ radarr_api_key }}"
      UN_RADARR_0_PATHS_0: "/media/downloads/movies"
      UN_RADARR_0_PROTOCOLS: "torrent"
      UN_RADARR_0_TIMEOUT: "10s"
      UN_RADARR_0_DELETE_ORIG: "false"
      UN_RADARR_0_DELETE_DELAY: "5m"
      UN_LIDARR_0_URL: "http://lidarr:8686"
      UN_LIDARR_0_API_KEY: "{{ lidarr_api_key }}"
      UN_LIDARR_0_PATHS_0: "/media/downloads/music"
      UN_LIDARR_0_PROTOCOLS: "torrent"
      UN_LIDARR_0_TIMEOUT: "10s"
      UN_LIDARR_0_DELETE_ORIG: "false"
      UN_LIDARR_0_DELETE_DELAY: "5m"
      UN_READARR_0_URL: "http://readarr:8787"
      UN_READARR_0_API_KEY: "{{ readarr_api_key }}"
      UN_READARR_0_PATHS_0: "/media/downloads/audiobooks"
      UN_READARR_0_PROTOCOLS: "torrent"
      UN_READARR_0_TIMEOUT: "10s"
      UN_READARR_0_DELETE_ORIG: "false"
      UN_READARR_0_DELETE_DELAY: "5m"
      UN_FOLDER_0_PATH: "/media/downloads/complete"
      UN_FOLDER_0_DELETE_AFTER: "10m"
      UN_FOLDER_0_DELETE_ORIGINAL: "false"
      UN_FOLDER_0_DELETE_FILES: "false"
      UN_FOLDER_0_MOVE_BACK: "false"
    force_update: yes
    restart_config:
      condition: on-failure
    placement:
      constraints:
        - node.id == {{ blacktalon_node_id }}
    mounts:
      - source: /blacktalon/media/downloads/
        target: /media/downloads/
        type: bind
    replicas: 1
    state: present
  tags: unpackerr